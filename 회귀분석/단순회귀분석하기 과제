s02<-read.csv("C:/Users/OWNER/Downloads/slr02.csv")
#1
plot(Y~X, s02, pch=16)
#2
cor.test(s02$X, s02$Y)
#3
model02<-lm(Y~X, s02)
summary(model02)
#선형식: 25.2323 + 3.2911X + residual
#4
#
X:화씨
Y:줄무늬 그라운드 크리켓의 울음소리/초
#5
#정규성:정규분포를 따른다.
qqnorm(model02$residuals)
qqline(model02$residuals)
shapiro.test(model02$residuals)
#독립성:독립성을 만족한다.
library(car)
plot(model02$fitted.values, model02$residuals)
durbinWatsonTest(model02)
#등분산성:등분산성을 만족한다.
spreadLevelPlot(model02)
ncvTest(model02)


s07<-read.csv("C:/Users/OWNER/Downloads/slr07.csv")
#1
plot(Y~X, s07, pch=16)
#2
cor.test(s07$X, s07$Y)
#3
model07<-lm(Y~X, s07)
summary(model07)
#선형식: 46.4508 + 0.2876X + residual
#4
#X:수컷 회색 캥거루 코 길이
Y:수컷 회색 캥거루 폭
#5
#정규성:정규분포를 따른다.
qqnorm(model07$residuals)
qqline(model07$residuals)
shapiro.test(model07$residuals)
#독립성:독립성을 만족한다.
plot(model07$fitted.values, model07$residuals)
durbinWatsonTest(model07)
#등분산성:등분산성을 만족한다.
spreadLevelPlot(model07)
ncvTest(model07)

s12<-read.csv("C:/Users/OWNER/Downloads/slr12.csv")
plot(Y~X, s12, pch=16)
#1.data의 이상치를 제거해야 좋은 모형을 만듦
그리고 기울기가 2개라 그거 두 개 써야 함
2. 3차 모형 식을 집어넣자
1차에 넣을 때보다 훨씬 결과 좋음
3.모형에 대한 그림 넣을 때는
predict로 그리면 예측값이 선으로 들어감

  ex)
  slr05
  화재 건수로 도둑 건 수를 예측하는 모형 만들기

a<-read.table("clipboard", header = T)
    ##결측치 제거 모형 2가지
    1.
    data<-a[complete.cases(a),]
    2.
    data<-na.omit(a)

plot(a, pch=16)
aa<-a[a$Y<140,]
plot(aa)
cor(aa$X, aa$Y)

#1-1
out<-lm(Y~X, aa)
summary(out)

abline(out, col="blue")

#1-2
out<-lm(Y~X+I(X^2)+I(X^3), aa)
summary(out)

x<-seq(0,40,0.5)
y<-predict(out, data.frame(X=x))
plot(Y~X, aa)
lines(x,y, col="red")


#2.
library(segmented)
out1<-lm(Y~X, aa)
out2<-segmented(out1)
out2
plot(out2, ylim=c(0,60))
points(aa$X, aa$Y)


cor.test(s12$X, s12$Y)
model12<-lm(Y~X, s12)
  #out2<-lm(Y~X+I(X^2), aa)가 좀 더 적절한 모형인 것 같음(2차/ 다항으로 갈 수록 독립성은 만족하지만 정규랑 등분산은 확인해봐야함)
summary(model12)
#선형식: 867.6042 + 0.3732X + residual
#4
#x:최초 입주 예정년수
y:예상 사용 종료 연도
#5
#정규성:정규분포를 따르지 않는다.
qqnorm(model12$residuals)
qqline(model12$residuals)
shapiro.test(model12$residuals)
#독립성:독립성을 만족한다.
plot(model12$fitted.values, model12$residuals)
durbinWatsonTest(model12)
#등분산성:등분산성을 만족한다.
spreadLevelPlot(model12)
ncvTest(model12)
