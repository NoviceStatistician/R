if(!require(ggplot2))install.packages("ggplot2"); library(ggplot2)
if(!require(ggmap)) install.packages("ggmap"); library(ggmap)

# ggmap(get_map(location='south korea', zoom=7))
# error 발생 : google maps API terms of Service가 변경됨

if(!requireNamespace("devtools")) install.packages("devtools")
devtools::install_github("dkahle/ggmap", ref = "tidyup")


# 좌, 우, 위, 아래의 값을 지정해 주어야 지도 그림이 그려짐
kor <- c(left = 124, bottom = 33, right = 132, top = 39) #경도 위도 지정
map <- get_stamenmap(kor, zoom = 6, maptype = "toner-lite") #인터넷에 해당하는 그림을 다운받아라
#zoom은 상세하게 그림 그려줌, 높을 수록 지도 많이 다운받음
ggmap(map)
map <- get_stamenmap(kor, 
                     zoom = 6, maptype = "watercolor") #?get_stamenmap 하면 다양한 maptype 볼 수 있음
ggmap(map)


#유럽지도 가져오기
europe <- c(left = -12, bottom = 35, right = 30, top = 63)
get_stamenmap(europe, zoom = 5) %>% ggmap()


kor <- c(left = 124, bottom = 33, right = 132, top = 39)
map <- get_stamenmap(kor, zoom = 7, maptype = "toner-lite")
plot(map)


wifi <- read.csv('C:/Users/OWNER/Desktop/Chap13_map2/wifi.csv', header=T) #wifi.csv
head(wifi)

ggmap(map) + geom_point(data=wifi, aes(x=lon, y=lat, color=company))
facet_grid()

ggmap(map) + stat_density_2d(data=wifi, aes(x=lon, y=lat))

ggmap(map) + 
  stat_density_2d(data=wifi, aes(x=lon, y=lat, fill=..level.., alpha=..level..), geom='polygon', size=2, bins=30)
#일단 aes 안에 들어 있는 fill은 문자 그대로 색깔로 채우라는 뜻입니다.
# ..level..은 레벨(level)이 높을수록,  예를 들어 기압이 높거나 고도가 높을수록
# 더 진한 색깔을 칠하라는 뜻입니다.
# alpha는 투명도를 나타냅니다.
# 역시 같은 원리로 레벨이 높으면 불투명하게(색이 더 잘 드러나게)
# 칠하고 낮을 때는 투명하게(희미하게) 칠하라는 의미입니다

# geom='polygon'에서 polygon은 다각형이라는 뜻입니다.
# 기본은 위에서 본 것처럼 선(線)으로 돼 있는데 그것 말고 도형으로 그리라고 명령을 준 겁니다.
# 선을 기준으로 size는 선 굵기, bins는 선 간격이라는 뜻입니다.
# 이름이 이렇게 붙은 건 원래 점을 이은 선을 기준으로 삼고 있는 까닭입니다.

p <- ggmap(map) + stat_density_2d(data=wifi, aes(x=lon, y=lat, fill=..level.., alpha=..level..), geom='polygon', size=7, bins=28) + 
  scale_fill_gradient(low='yellow', high='red', guide=F) +
  scale_alpha(range=c(0.02, 0.8), guide=F)
p


airport <- read.csv('C:/Users/OWNER/Desktop/Chap13_map2/airport.csv', header=T) #airport.csv

route <- read.csv('C:/Users/OWNER/Desktop/Chap13_map2/route.csv', header=T) #route.csv

head(airport)
head(route)

route$id

library(dplyr)
route %>% filter(id==7)

ggmap(map) + geom_point(data=airport, aes(x=lon, y=lat), size=3)


p <- ggmap(map) + geom_point(data=airport, aes(x=lon, y=lat), size=3)
ggmap(map) + geom_point(data=airport, aes(x=lon, y=lat), size=3)

p<-p + geom_line(data=route, aes(x=lon, y=lat, group=id)) #group안넣으면 선이 뒤죽박죽이 됨(매칭 되는 애들만 연결해줌)
p
CJU_route<-route[route$airport=="CJU","id"]
route1 <- route[route$id %in% CJU_route,]
p + geom_line(data=route1, aes(x=lon, y=lat, group=id), col='gold', size=2)

# Q. 기상관측소 데이터를 찾아서 지도에 그려보세요.
# stn<- read.csv(choose.files())

if(!require(raster))install.packages("raster"); library(raster)
korea <- getData('GADM', country='kor', level=2)
plot(korea)

ggplot(data=korea, aes(x=long, y=lat, group=group)) +
  geom_polygon(fill='white', color='black')
# 잘 보시면 예전에 못 보던 게 하나 보입니다.
# group : 선을 모아 면을 만들 때도 짝을 맞춰주는 속성
# 이 지도는 옛날 행정구역임
# GIS DEVELOPER에서 행정구역 데이터 다운 받기
# shp파일로 다운 되서 readOGR함수로 파일 열기.

if(!require(rgdal))install.packages("rgdal"); library(rgdal)
if(!require(maptools))install.packages("maptools"); library(maptools)

korea <- readOGR('C:/Users/OWNER/Desktop/Chap13_map2/SIG_201703/TL_SCCO_SIG.shp')#'TL_SCCO_SIG.shp' shp 파일 여는 함수
head(korea)# 맨 앞 숫자 2개가 지역 나타내는 것. 그것만 따로 분리하면 지역 골라서 그림 그리기 가능
seoul<- subset(korea, substr(SIG_CD, 1, 2)=="11")

ggplot() + geom_polygon(data=korea, aes(x=long, y=lat, group=group), fill='white', color='black')

#19대 대통령 선거 시군구별 득표율
result <- read.csv('result.csv', header=T) #'result.csv'
head(result)
head(korea)

korea1<-merge(korea, result, by.x="SIG_CD", by.y="id")
head(korea1)

SIG_CD<-paste(unique(korea1$SIG_CD))

f.korea <- fortify(korea) #maptools package
f.korea$SIG_CD <-NA

for (i in 1:250){
  f.korea[f.korea$id==(i-1),"SIG_CD"]=SIG_CD[i]  
}

korea2 <- merge(f.korea, result, by.x="SIG_CD", by.y="id")

p<-ggplot() + geom_polygon(data=korea2, aes(x=long, y=lat, group=group, fill=moon))
p + scale_fill_gradient(low='white', high='#004ea2')

if(!require(viridis))install.packages("viridis");library(viridis)

p<-ggplot() + geom_polygon(data=korea2, aes(x=long, y=lat, group=group, fill=moon))
p + scale_fill_viridis()
# 기존에 있는 파레트를 이용해서 그려보자.

p + scale_fill_viridis(direction=-1) + theme_void() + guides(fill=F)
# 색을 반대로, 회색을 지우고, 범례도 지워보자

# 다른 후보들의 그림을 그려보세요.
# 문재인 후보와 홍준표 후보의 차이를 시각적으로 살펴보세요.
